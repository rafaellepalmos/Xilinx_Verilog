////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2003 Xilinx, Inc.
// All Right Reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 7.1.04i
//  \   \         Application : ISE WebPACK
//  /   /         Filename : piggy_test.tfw
// /___/   /\     Timestamp : Fri Feb 24 17:59:04 2012
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: 
//Design Name: piggy_test
//Device: Xilinx
//
`timescale 1ns/1ps

module piggy_test;
    reg clk = 1'b0;
    reg reset = 1'b1;
    reg b1_in = 1'b0;
    reg b5_in = 1'b0;
    reg b10_in = 1'b0;
    wire [6:0] segment1;
    wire [6:0] segment0;
    wire full_led;

    parameter PERIOD = 100;
    parameter real DUTY_CYCLE = 0.5;
    parameter OFFSET = 0;

    initial    // Clock process for clk
    begin
        #OFFSET;
        forever
        begin
            clk = 1'b0;
            #(PERIOD-(PERIOD*DUTY_CYCLE)) clk = 1'b1;
            #(PERIOD*DUTY_CYCLE);
        end
    end

    piggy UUT (
        .clk(clk),
        .reset(reset),
        .b1_in(b1_in),
        .b5_in(b5_in),
        .b10_in(b10_in),
        .segment1(segment1),
        .segment0(segment0),
        .full_led(full_led));

        integer TX_ERROR = 0;
        
        initial begin  // Open the results file...
            #1700 // Final time:  1700 ns
            if (TX_ERROR == 0) begin
                $display("No errors or warnings.");
                end else begin
                    $display("%d errors found in simulation.", TX_ERROR);
                    end
                    $stop;
                end

                initial begin
                    // -------------  Current Time:  135ns
                    #135;
                    reset = 1'b0;
                    // -------------------------------------
                    // -------------  Current Time:  235ns
                    #100;
                    b5_in = 1'b1;
                    // -------------------------------------
                    // -------------  Current Time:  535ns
                    #300;
                    b1_in = 1'b1;
                    // -------------------------------------
                    // -------------  Current Time:  635ns
                    #100;
                    b1_in = 1'b0;
                    b5_in = 1'b0;
                    b10_in = 1'b1;
                    // -------------------------------------
                    // -------------  Current Time:  735ns
                    #100;
                    b1_in = 1'b1;
                    b10_in = 1'b0;
                    // -------------------------------------
                    // -------------  Current Time:  835ns
                    #100;
                    b1_in = 1'b0;
                    b10_in = 1'b1;
                    // -------------------------------------
                    // -------------  Current Time:  1035ns
                    #200;
                    b5_in = 1'b1;
                    b10_in = 1'b0;
                    // -------------------------------------
                    // -------------  Current Time:  1335ns
                    #300;
                    b1_in = 1'b1;
                    b5_in = 1'b0;
                    // -------------------------------------
                    // -------------  Current Time:  1435ns
                    #100;
                    b1_in = 1'b0;
                    b5_in = 1'b1;
                    // -------------------------------------
                end

                task CHECK_segment1;
                    input [6:0] NEXT_segment1;

                    #0 begin
                        if (NEXT_segment1 !== segment1) begin
                            $display("Error at time=%dns segment1=%b, expected=%b", $time, segment1, NEXT_segment1);
                            TX_ERROR = TX_ERROR + 1;
                        end
                    end
                endtask
                task CHECK_segment0;
                    input [6:0] NEXT_segment0;

                    #0 begin
                        if (NEXT_segment0 !== segment0) begin
                            $display("Error at time=%dns segment0=%b, expected=%b", $time, segment0, NEXT_segment0);
                            TX_ERROR = TX_ERROR + 1;
                        end
                    end
                endtask
                task CHECK_full_led;
                    input NEXT_full_led;

                    #0 begin
                        if (NEXT_full_led !== full_led) begin
                            $display("Error at time=%dns full_led=%b, expected=%b", $time, full_led, NEXT_full_led);
                            TX_ERROR = TX_ERROR + 1;
                        end
                    end
                endtask

            endmodule

